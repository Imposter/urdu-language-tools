name: Main Workflow

on:
  push:
    branches:
      - main
      - actions
    tags:
      - 'v*.*.*'

jobs:
  prep:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Application Version
        id: version
        uses: paulhatch/semantic-version@v5.4.0
        with:
          change_path: "UrduLanguageTools"
          version_format: "${major}.${minor}.${patch}.${increment}"

  build:
    runs-on: windows-latest
    needs: [prep]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v2

      - name: Create Build Directory
        run: mkdir .build

      - name: Restore NuGet Packages
        run: nuget restore UrduLanguageTools.sln

      - name: Import Code Signing Certificate
        shell: pwsh
        run: |
          ./ops/ImportCodeSigningCert.ps1 `
            -CertificateBase64 "${{ secrets.CODE_SIGNING_CERTIFICATE }}" `
            -CertificatePassword "${{ secrets.CODE_SIGNING_CERTIFICATE_PASSWORD }}" `
            -CertificateFilePath "UrduLanguageTools/CodeSigningCert.pfx"

      - name: Build Solution
        run: |
          msbuild.exe UrduLanguageTools.sln `
            /t:Publish `
            /p:Platform="Any CPU" `
            /p:Configuration="Release" `
            /p:Version="${{ needs.prep.outputs.version }}" `
            /p:SignManifest=true `
            /p:ManifestCertificateThumbprint="${{ secrets.CODE_SIGNING_CERTIFICATE_THUMBPRINT }}"
          cp UrduLanguageTools/bin/Release/app.publish/* ${{ github.workspace }}/.build
        
      - name: Copy Code Signing Certificate
        run: cp UrduLanguageTools/CodeSigningCert.pfx ${{ github.workspace }}/.build

      - name: Debug
        run: |
          dir .
          dir .build
          dir UrduLanguageTools

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: UrduLanguageTools
          path: ${{ github.workspace }}/.build
          if-no-files-found: error

  release:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: UrduLanguageTools
          path: .artifacts

      - name: Create Release
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release create "$GITHUB_REF_NAME" --generate-notes

      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ls -al .artifacts
          gh release upload "$GITHUB_REF_NAME" .artifacts/*
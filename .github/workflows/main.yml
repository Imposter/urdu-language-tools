name: Main Workflow

on:
  push:
    branches:
      - main
      - actions
    tags:
      - 'v*.*.*'

jobs:
  prep:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.setup-env.outputs.version }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Application Version
        id: version
        uses: paulhatch/semantic-version@v5.4.0
        with:
          change_path: "UrduLanguageTools"
          version_format: "${major}.${minor}.${patch}.${increment}"


  build:
    runs-on: windows-latest
    needs: [prep]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2
  
      - name: Setup NuGet
        uses: NuGet/setup-nuget@v2
        
      - name: Navigate to Workspace
        run: cd $GITHUB_WORKSPACE

      - name: Save Code Signing Certificate
        shell: pwsh
        run: |
          $certificateBase64 = "${{ secrets.CODE_SIGNING_CERTIFICATE }}"
          $certificateBytes = [System.Convert]::FromBase64String($certificateBase64)
          $certificateFilePath = "UrduLanguageTools/CodeSigningCert.pfx"
          [System.IO.File]::WriteAllBytes($certificateFilePath, $certificateBytes)
  
      - name: Create Build Directory
        run: mkdir _build

      - name: Restore NuGet Packages
        run: nuget restore UrduLanguageTools.sln

      - name: Build Solution
        run: |
          msbuild.exe UrduLanguageTools.sln /nologo /nr:false /p:DeployOnBuild=true /p:DeployDefaultTarget=WebPublish /p:WebPublishMethod=FileSystem /p:DeleteExistingFiles=True /p:platform="Any CPU" /p:configuration="Release" /p:Version=${{ needs.prep.outputs.version || '1.0.0.0' }} /p:PublishUrl="../_build"

  release:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.prep.outputs.version }}
          release_name: Release ${{ needs.prep.outputs.version }}
          body: |
            Release ${{ needs.prep.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: UrduLanguageTools
          path: "./_build"

      - name: Upload Release Asset
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/publish/UrduLanguageTools.zip
          asset_name: UrduLanguageTools.zip
          asset_content_type: application/zip